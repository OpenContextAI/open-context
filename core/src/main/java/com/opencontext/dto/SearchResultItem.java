package com.opencontext.dto;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.DecimalMax;
import jakarta.validation.constraints.DecimalMin;
import jakarta.validation.constraints.NotNull;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

import java.util.List;
import java.util.UUID;

/**
 * Individual search result item for exploratory knowledge discovery.
 * Contains essential information for users to identify and select relevant chunks.
 */
@Schema(description = "Individual search result item for exploratory search (find_knowledge)")
@Getter
@Builder
@NoArgsConstructor(access = AccessLevel.PROTECTED)
@AllArgsConstructor
public class SearchResultItem {

    /**
     * Unique identifier of the chunk for subsequent get_content requests.
     */
    @Schema(description = "Chunk identifier for content retrieval", requiredMode = Schema.RequiredMode.REQUIRED)
    @NotNull
    private UUID chunkId;

    /**
     * Title or heading of the chunk for user context.
     */
    @Schema(description = "Chunk title or heading", example = "5.8.2. JWT Authentication Converter")
    private String title;

    /**
     * Content preview generated by extracting first 50 characters + "...".
     * Following PRD specification for simple extraction over AI summarization.
     */
    @Schema(description = "Content preview (first 50 chars + '...')", 
            example = "To customize the conversion from a JWT to an Auth...")
    private String snippet;

    /**
     * Relevance score from hybrid search (BM25 + Vector similarity).
     * Normalized to 0.0-1.0 range for consistent interpretation.
     * Always present in search results.
     */
    @Schema(description = "Search relevance score", example = "0.92", minimum = "0.0", maximum = "1.0")
    @DecimalMin(value = "0.0")
    @DecimalMax(value = "1.0")
    @NotNull
    private Double relevanceScore;

    /**
     * Hierarchical breadcrumbs for user navigation context.
     * Helps users understand the chunk's position within document structure.
     * Optional field that enhances UX when available.
     */
    @Schema(description = "Breadcrumb path for navigation context", 
            example = "[\"Chapter 5\", \"Security\", \"JWT\", \"Configuration\"]")
    private List<String> breadcrumbs;
}